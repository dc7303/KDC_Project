<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="noticeBoardMapper">

<resultMap type="noticeBoardDTO" id="noticeBoardDTO">
    <id column="notice_board_pk" property="noticeBoardPk" />
    <result column="NOTICE_BOARD_CLASSIFICATION" property="noticeBoardClassification" />
    <result column="NOTICE_BOARD_CLASSROOM_CODE" property="noticeBoardClassRoomCode" />
    <result column="NOTICE_BOARD_TITLE" property="noticeBoardTitle" />
    <result column="NOTICE_BOARD_WRITER_ID" property="noticeBoardWriterId" />
    <result column="NOTICE_BOARD_WRITE_DATE" property="noticeBoardDate" />
    <result column="NOTICE_BOARD_CONTENTS" property="noticeBoardContents"/>
    <result column="NOTICE_BOARD_VIEWS" property="noticeBoardViews"/>
    <result column="NOTICE_BOARD_ATTACHMENT" property="noticeBoardAttachment" />
    <result column="NOTICE_BOARD_ISDELETE" property="noticeBoardIsDelete" typeHandler="edu.kosta.kdc.util.YesNoBooleanTypeHandler"/>
    <result column="authName" property="authName"/>
    <association property="member" javaType="memberDTO">
        <id column="MEMBER_ID" property="memberId"/>
        <result column="MEMBER_PW" property="memberPwd"/>
        <result column="MEMBER_NAME" property="memberName"/>
        <result column="MEMBER_NICKNAME" property="memberNickName"/>
        <result column="MEMBER_BIRTHDAY" property="memberBirth"/>
        <result column="MEMBER_PHONENUMBER" property="memberPhone"/>
        <result column="MEMBER_EMAIL" property="memberEmail"/>
        <result column="MEMBER_ISWITHDRAWAL" property="memberIsWithdrawal" typeHandler="edu.kosta.kdc.util.YesNoBooleanTypeHandler"/>
        <result column="MEMBER_JOIN_DATE" property="memberDate"/>
    </association>
</resultMap>

    <!-- 전체 검색 -->
<select id="noticeBoardSelect" parameterType="map" resultMap="noticeBoardDTO">
    SELECT A.*, B.MEMBER_NICKNAME,(SELECT AUTHORITY_ROLE FROM AUTHORITY WHERE AUTHORITY_ID=B.MEMBER_ID) authName
    FROM NOTICE_BOARD A, MEMBER B
    WHERE A.NOTICE_BOARD_ISDELETE= 'FALSE'
    AND A.NOTICE_BOARD_CLASSIFICATION = #{classification}
    AND A.NOTICE_BOARD_WRITER_ID = B.MEMBER_ID
    <if test="classRoomCode != null">
    AND A.NOTICE_BOARD_CLASSROOM_CODE = #{classRoomCode}
    </if>
    ORDER BY A.NOTICE_BOARD_PK DESC
</select>

    <!--  조건 검색 -->
<select id="SearchTitleAndContents" parameterType="map" resultMap="noticeBoardDTO">
    SELECT A.*
    , (SELECT AUTHORITY_ROLE FROM AUTHORITY WHERE AUTHORITY_ID=B.MEMBER_ID) authName
    FROM NOTICE_BOARD A, MEMBER B
    WHERE A.NOTICE_BOARD_WRITER_ID = B.MEMBER_ID
    AND A.NOTICE_BOARD_CLASSIFICATION= #{classification}
    AND A.NOTICE_BOARD_ISDELETE='FALSE'
    <if test="department.equals('title')">
    AND UPPER(A.NOTICE_BOARD_TITLE)  like  '%' || UPPER(#{noticeBoardSearch}) || '%'
    </if>
    <if test="department.equals('content')">
    AND UPPER(A.NOTICE_BOARD_CONTENTS) like '%' || UPPER(#{noticeBoardSearch}) || '%'
    </if>
</select>

    <!-- 레코드 삽입 -->
    <insert id="noticeBoardInsert" parameterType="NoticeBoardDTO">

        INSERT INTO NOTICE_BOARD
        VALUES (NOTICE_BOARD_SEQ.NEXTVAL, #{noticeBoardClassification}, #{noticeBoardClassRoomCode}, #{noticeBoardTitle}, #{noticeBoardWriterId},
        SYSDATE,#{noticeBoardContents}, 0, #{noticeBoardAttachment},
        'FALSE')


    </insert>

    <!-- 게시글 상세보기 -->
    <select id="SelectNoticeBoardPK"
        parameterType="NoticeBoardDTO" resultMap="noticeBoardDTO">
        SELECT * FROM NOTICE_BOARD
        WHERE notice_board_pk = #{noticeBoardPk} 
</select>



    <!-- 조회수 증가 -->
    <update id="noticeBoardViewsUpdate" parameterType="NoticeBoardDTO">
        UPDATE NOTICE_BOARD SET NOTICE_BOARD_VIEWS = NOTICE_BOARD_VIEWS +1
        WHERE notice_board_pk=#{_parameter}
    </update>

    <!-- 수정하기 -->
    <update id="noticeBoardUpdate" parameterType="NoticeBoardDTO">
        UPDATE NOTICE_BOARD SET
        NOTICE_BOARD_TITLE = #{noticeBoardTitle},
        NOTICE_BOARD_CONTENTS = #{noticeBoardContents},
        NOTICE_BOARD_ATTACHMENT  = #{noticeBoardAttachment}
        WHERE notice_board_pk = #{noticeBoardPk}
    </update>
    
    <!--  삭제하기 -->
    <update id="noticeBoardDelete" parameterType="int" >
       UPDATE NOTICE_BOARD  SET
        NOTICE_BOARD_ISDELETE = 'TRUE'
        WHERE
        notice_board_pk = #{noticeBoardPk}
       
    </update>
    

    <!-- classification을 기준으로 컬럼 수 가져오기 -->
    <select id="boardQuantityByClassification" parameterType="string" resultType="java.lang.Integer">
        select nvl(count(*), 0) as count from notice_board where notice_board_classification = #{_parameter}
        and notice_board_isdelete = 'FALSE'
    </select>

    <!-- 공지사항 최신 글 5개 가져오기 -->
    <select id="selectFiveNotice" resultMap="noticeBoardDTO">
        select *
        from (select * from NOTICE_BOARD where notice_board_classification = 'generalNotice' and notice_board_isdelete='FALSE' ORDER BY NOTICE_BOARD_PK DESC)
        where <![CDATA[ROWNUM <= 5]]>
    </select>
    
    <!-- 조건 검색 페이징 개수 -->
    <select id="searchPagingCount" parameterType="map" resultType="java.lang.Integer">
        select nvl(count(*), 0) as count 
        FROM NOTICE_BOARD A, MEMBER B
        WHERE A.NOTICE_BOARD_WRITER_ID = B.MEMBER_ID
        AND A.NOTICE_BOARD_CLASSIFICATION= #{classification}
        AND A.NOTICE_BOARD_ISDELETE='FALSE'
        <if test="department.equals('title')">
            AND UPPER(A.NOTICE_BOARD_TITLE)  like  '%' || UPPER(#{noticeBoardSearch}) || '%'
        </if>
        <if test="department.equals('content')">
            AND UPPER(A.NOTICE_BOARD_CONTENTS) like '%' || UPPER(#{noticeBoardSearch}) || '%'
        </if>
      
    </select>
    
    <!--전체 페이징 처리  -->
    <select id="noticeBoardSelectAllForPaging" parameterType ="map" resultMap="noticeBoardDTO">
       SELECT X.RNUM, X.* FROM(
       SELECT ROWNUM AS RNUM, A.* FROM ( 
       SELECT A.*,(SELECT AUTHORITY_ROLE FROM AUTHORITY WHERE AUTHORITY_ID=B.MEMBER_ID) authName
       FROM NOTICE_BOARD A, MEMBER B
       WHERE A.NOTICE_BOARD_ISDELETE= 'FALSE'
       AND A.NOTICE_BOARD_CLASSIFICATION = #{classification}
       AND A.NOTICE_BOARD_WRITER_ID = B.MEMBER_ID
       <if test="classRoomCode != null">
           AND A.NOTICE_BOARD_CLASSROOM_CODE = #{classRoomCode}
       </if>
           )A WHERE ROWNUM <![CDATA[ <= ]]> #{lastColumn}) X 
           WHERE X.RNUM <![CDATA[ >= ]]> #{firstColumn} 
    </select>
    
    <!-- 조건 검색 페이징 처리 -->
    <select id="noticeBoardSelectPaging" parameterType="map" resultMap="noticeBoardDTO">
        SELECT X.RNUM, X.* FROM(
        SELECT ROWNUM AS RNUM, A.* FROM ( 
        SELECT A.*, (SELECT AUTHORITY_ROLE FROM AUTHORITY WHERE AUTHORITY_ID=B.MEMBER_ID) authName
        FROM NOTICE_BOARD A, MEMBER B
        WHERE A.NOTICE_BOARD_WRITER_ID = B.MEMBER_ID
        AND A.NOTICE_BOARD_CLASSIFICATION= #{classification}
        AND A.NOTICE_BOARD_ISDELETE='FALSE'
        <if test="department.equals('title')">
            AND UPPER(A.NOTICE_BOARD_TITLE)  like  '%' || UPPER(#{noticeBoardSearch}) || '%'
        </if>
        <if test="department.equals('content')">
            AND UPPER(A.NOTICE_BOARD_CONTENTS) like '%' || UPPER(#{noticeBoardSearch}) || '%'
        </if>
        )A WHERE ROWNUM <![CDATA[ <= ]]>#{lastColumn}) X 
        WHERE X.RNUM <![CDATA[ >= ]]>#{firstColumn} 
      
    </select>

</mapper>