<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
        <beans:property name="order" value="3"/>
	</beans:bean>
	
	<context:component-scan base-package="edu.kosta.kdc" />
	
    
    

    <!-- tiles 등록하기  -->
    <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <beans:property name="order" value="2"/>
    </beans:bean>
    
    <beans:bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" id="tilesViewResolver"/>
    <beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/spring/tiles/tiles-context.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
  

  

    <!-- 
        ExceptionResolver 
        사용시 주석 풀것 
    -->
     <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="edu.kosta.kdc.exception.KdcException">
                    error/errorView
                </beans:prop>
            </beans:props>
        </beans:property>  
    </beans:bean>
    
    <!-- AOP설정 -->
    <aop:aspectj-autoproxy/>
    
    <!-- 뒤로 가기 했을때 Cache에 기억된 정보를 가져오지 않고 새로고침으로 데이터 읽어오기 설정 -->
    <interceptors>
        <beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <beans:property name="cacheSeconds" value="0"/>
            <beans:property name="useExpiresHeader" value="true"/>
            <beans:property name="useCacheControlHeader" value="true"/>
            <beans:property name="useCacheControlNoStore" value="true"/>
        </beans:bean>
    </interceptors>
	
    <!-- Websocket 핸들러로 처리할 클래스 참조 -->
    
    <websocket:handlers>
        <websocket:mapping handler="echoHandler" path="/echo"/>
        <websocket:sockjs/>
    </websocket:handlers>
    
    <beans:bean id="echoHandler" class="edu.kosta.kdc.util.EchoHandler"/>
    
</beans:beans>
